file "/root/user" do

action :create
end

package "httpd" do


action :create


end

service "httpd" do

action [ :enable, :start]

end


file  "/var/www/html/index.html" do

action :crate

content "<html><body> <h1> 'welcome to chef world comeback'</h1> </body> </html>"


end



code 3:

package "httpd" do

action :install

end

service "httpd" do

action [ :enable, :start]

end

template "/var/www/html/index.html" do


source "index.html.erb"

end:


code 4:


step 1


vi recipes/default.rb

package "httpd" do

action :install

end

service "httpd" do

action [ :enable, :start]

end

template "/var/www/html/index.html" do


source "index.html.erb"

end

step 2:

vi templates/default/index.html.erb

<html> <body> <h1> 'welcome to chef world templates' </h1> </body> </html>


code 5:

step 1:

package "httpd" do

action :install

end

service "httpd" do

action [ :enable, :start]

end

cookbook_file "/var/www/html/index.html" do


source "index.html.erb"

end

step 2:

 vi files/default/index.html

<html> <body> <h1> 'welcome to chef world files' </h1> </body> </html>


single cookbook apply to multiple platforms:


vi recipes/default.rb

package_name  = "apache2"

service_name  = "apache2"

document_name = "/var/www/html"

if node["platform"] == "amazon"


package_name  = "httpd"

service_name  = "httpd"

document_name = "/var/www/html"


end

package package_name do

action :install

end


service service_name do

 action [ :enable, :start]

end

template "#{document_name}/index.html" do

source "index.html.erb"


end

attributes:

 vi attributes/defualt.rb:

case node["plarform"] = "apache2"
when "ubuntu"

  default["package"] = "apache2"
  default["service"] = "apache2"
  default["document_root"] = "/var/www/html"

when "amazon"

  default["package"]  = "httpd"
  default["service"]  = "httpd"
  default["document_root"] = "httpd"


end

vi recipe/default.rb

package node["package_name"] do

action :install

end

service ["service_name"] do

action [ :enable, :start]

end

cookbook_file "#{node["document_root"]}/index.html" do


source "index.html"

mode "0644"

end



 
chef commands:

knife node run_list remove NODE_NAME 'role[ROLE_NAME]'

git rm --cached filename << To unstage file from staging area >>

ruby systax:

Ruby if...else Statement
Syntax
if conditional [then]
   code...
[elsif conditional [then]
   code...]...
[else
   code...]
end
======================================================


envi:
=========

step 1: attributes


vi attributes/default.rb


default['cookbookname']['Listen']="portnumber"


step 2:  files directory


vi files/default/index.html


hell chef enviromement varible


step 3:  template


chmod 600 pem key path

scr -i keypath  -r username@ip:sorce:filepath desti: path


Listen <%=node['cookbookname']['Listen']%>


step 4: now we are writing recipe


package "packagename"do

action :install

end


service "service name"do

action :start

end

cookbook_file "path of  the index.html file"do

source "index.html"

end

template "path of  the config file"do

source "httpd.conf.erb"


end


:wq!

knife upload cookbook enviran


node machine:
=============


chef-client -r [cookbookname]













 




 





 